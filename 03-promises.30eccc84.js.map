{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,IAEpCC,QAAQC,IAAI,UAAyBC,OAATV,EAAS,iBACpBG,EAAT,CAAEH,WAAUC,YAEpBO,QAAQC,IAAI,UAAyBC,OAATV,EAAS,gBAC/BI,EAAO,CAAEJ,WAAUC,U,GAEpBA,E,IA3CEU,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBASN,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALf,MAAOmB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAWC,OAAOJ,EAAMK,OACtBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAYH,OAAOF,EAAOG,OAEvBG,EAAW,EAAGA,EAAWD,EAAY,EAAGC,GAAY,EAC3D5B,EAAc4B,EAAUL,GACrBM,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBO,QAAQC,IAAI,uBAAwCC,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAC1D6B,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCtB,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,IAGjDgC,OAAM,SAAAJ,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBO,QAAQC,IAAI,sBAAuCC,OAAfV,EAAS,QAAYU,OAANT,EAAM,OACzD6B,EAAAjC,GAASkC,OAAOG,QACd,sBAAuCxB,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,IAGnDqB,GAAYG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayNum = Number(delay.value);\n  const stepNum = Number(step.value);\n  const amountNum = Number(amount.value);\n\n  for (let position = 1; position < amountNum + 1; position += 1) {\n    createPromise(position, delayNum)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayNum += stepNum;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        console.log(`Проміс ${position} відпрацював`);\n        resolve({ position, delay });\n      } else {\n        console.log(`Проміс ${position} провалився`);\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","console","log","concat","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayNum","Number","value","stepNum","amountNum","position1","then","param","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.30eccc84.js.map"}